Elm.BhangraRace = Elm.BhangraRace || {};
Elm.BhangraRace.make = function (_elm) {
   "use strict";
   _elm.BhangraRace = _elm.BhangraRace || {};
   if (_elm.BhangraRace.values) return _elm.BhangraRace.values;
   var _U = Elm.Native.Utils.make(_elm),
   $Basics = Elm.Basics.make(_elm),
   $Color = Elm.Color.make(_elm),
   $Debug = Elm.Debug.make(_elm),
   $Graphics$Collage = Elm.Graphics.Collage.make(_elm),
   $Graphics$Element = Elm.Graphics.Element.make(_elm),
   $Graphics$Input = Elm.Graphics.Input.make(_elm),
   $Keyboard = Elm.Keyboard.make(_elm),
   $List = Elm.List.make(_elm),
   $Maybe = Elm.Maybe.make(_elm),
   $Result = Elm.Result.make(_elm),
   $Signal = Elm.Signal.make(_elm),
   $Text = Elm.Text.make(_elm),
   $Time = Elm.Time.make(_elm),
   $Window = Elm.Window.make(_elm);
   var _op = {};
   var nextBtn = $Signal.mailbox(0);
   var dialogButton = A2($Graphics$Input.button,A2($Signal.message,nextBtn.address,1),"next");
   var resetButton = A2($Graphics$Input.button,A2($Signal.message,nextBtn.address,-5627),"Play Again");
   var extractIndex = F2(function (i,xs) {
      extractIndex: while (true) {
         var _p0 = {ctor: "_Tuple2",_0: i,_1: xs};
         if (_p0._1.ctor === "::") {
               if (_p0._0 === 0) {
                     return _p0._1._0;
                  } else {
                     var _v1 = i - 1,_v2 = _p0._1._1;
                     i = _v1;
                     xs = _v2;
                     continue extractIndex;
                  }
            } else {
               return _U.crashCase("BhangraRace",
               {start: {line: 51,column: 5},end: {line: 54,column: 83}},
               _p0)("extractIndex: something happened that shouldnt\'ve");
            }
      }
   });
   var countdown_prompts = _U.list(["3","2","1","Go!"]);
   var countdown_screen = F2(function (num,_p2) {
      var _p3 = _p2;
      var msg = A2(extractIndex,num,countdown_prompts);
      return A4($Graphics$Element.container,_p3._0,_p3._1,$Graphics$Element.middle,$Graphics$Element.show(msg));
   });
   var dialog_prompts = _U.list(["Move your player by hitting the L and R keys","Select your opponent"]);
   var dialog = F2(function (num,_p4) {
      var _p5 = _p4;
      var msg = A2(extractIndex,num,dialog_prompts);
      return A4($Graphics$Element.container,
      _p5._0,
      _p5._1,
      $Graphics$Element.middle,
      A2($Graphics$Element.color,
      $Color.green,
      A3($Graphics$Collage.collage,
      300,
      300,
      _U.list([$Graphics$Collage.text($Text.fromString(msg))
              ,A2($Graphics$Collage.move,{ctor: "_Tuple2",_0: 70,_1: -70},$Graphics$Collage.toForm(dialogButton))]))));
   });
   var num_countdwn = $List.length(countdown_prompts);
   var num_prompts = $List.length(dialog_prompts);
   var incr_amount = 20;
   var board_h = 500;
   var board_w = 1200;
   var race_track = function (elems) {    return A2($Graphics$Element.color,$Color.grey,A3($Graphics$Collage.collage,board_w,board_h,elems));};
   var scl = 4;
   var img_w = 50 * scl;
   var start = -1 * (board_w / 2 - img_w / 2) + 20;
   var end = -1 * start;
   var total_dist = $Basics.abs(end - start);
   var third = total_dist / 3 + start;
   var two_third = total_dist * 3 / 4 + start;
   var img_h = 60 * scl;
   var player = function (_p6) {
      var _p7 = _p6;
      var _p9 = _p7._0;
      var ll = 8;
      var guy = F2(function (left,right) {
         return $Graphics$Collage.group(_U.list([A2($Graphics$Collage.move,
                                                {ctor: "_Tuple2",_0: _p9,_1: left},
                                                $Graphics$Collage.toForm(A3($Graphics$Element.image,img_w,img_h,"l_leg.png")))
                                                ,A2($Graphics$Collage.move,
                                                {ctor: "_Tuple2",_0: _p9,_1: right},
                                                $Graphics$Collage.toForm(A3($Graphics$Element.image,img_w,img_h,"r_leg.png")))
                                                ,A2($Graphics$Collage.moveX,
                                                _p9,
                                                $Graphics$Collage.toForm(A3($Graphics$Element.image,img_w,img_h,"yellow_body.png")))]));
      });
      var _p8 = _p7._2;
      switch (_p8.ctor)
      {case "Left": return A2(guy,ll,0);
         case "Right": return A2(guy,0,ll);
         default: return A2(guy,0,0);}
   };
   var opponent = F2(function (_p10,name) {
      var _p11 = _p10;
      var _p13 = _p11._0;
      var ll = 8;
      var body = "opponents/faceless_blue_body.png";
      var face = function (x) {
         return _U.cmp(x,third) < 0 ? A2($Basics._op["++"],"opponents/",A2($Basics._op["++"],name,"_1.png")) : _U.cmp(x,two_third) < 0 ? A2($Basics._op["++"],
         "opponents/",
         A2($Basics._op["++"],name,"_2.png")) : A2($Basics._op["++"],"opponents/",A2($Basics._op["++"],name,"_3.png"));
      };
      var guy = F2(function (left,right) {
         return $Graphics$Collage.group(_U.list([A2($Graphics$Collage.move,
                                                {ctor: "_Tuple2",_0: _p13,_1: left},
                                                $Graphics$Collage.toForm(A3($Graphics$Element.image,img_w,img_h,"l_leg.png")))
                                                ,A2($Graphics$Collage.move,
                                                {ctor: "_Tuple2",_0: _p13,_1: right},
                                                $Graphics$Collage.toForm(A3($Graphics$Element.image,img_w,img_h,"r_leg.png")))
                                                ,A2($Graphics$Collage.moveX,_p13,$Graphics$Collage.toForm(A3($Graphics$Element.image,img_w,img_h,body)))
                                                ,A2($Graphics$Collage.moveX,
                                                _p13,
                                                $Graphics$Collage.toForm(A3($Graphics$Element.image,img_w,img_h,face(_p13))))]));
      });
      var _p12 = _p11._2;
      switch (_p12.ctor)
      {case "Left": return A2(guy,ll,0);
         case "Right": return A2(guy,0,ll);
         default: return A2(guy,0,0);}
   });
   var Game = {ctor: "Game"};
   var Countdown = function (a) {    return {ctor: "Countdown",_0: a};};
   var Dialog = function (a) {    return {ctor: "Dialog",_0: a};};
   var CountdownTimer = function (a) {    return {ctor: "CountdownTimer",_0: a};};
   var Next = function (a) {    return {ctor: "Next",_0: a};};
   var NewTime = function (a) {    return {ctor: "NewTime",_0: a};};
   var KeyStroke = function (a) {    return {ctor: "KeyStroke",_0: a};};
   var game_sig = function () {
      var map_key = function (_p14) {    var _p15 = _p14;return KeyStroke(_p15.x);};
      return $Signal.mergeMany(_U.list([A2($Signal.map,NewTime,$Time.fps(8))
                                       ,A2($Signal.map,CountdownTimer,$Time.every($Time.second))
                                       ,A2($Signal.map,map_key,$Keyboard.arrows)
                                       ,A2($Signal.map,Next,nextBtn.signal)]));
   }();
   var Lose = {ctor: "Lose"};
   var Win = {ctor: "Win"};
   var racers = function (_p16) {
      var _p17 = _p16;
      var _p21 = _p17._2;
      var _p20 = _p17._1;
      var _p18 = _p20;
      var x1 = _p18._0;
      var k1 = _p18._1;
      var s1 = _p18._2;
      var _p19 = _p21;
      var x2 = _p19._0;
      var k2 = _p19._1;
      var s2 = _p19._2;
      var r1 = A2($Graphics$Collage.moveY,-50,player(_p20));
      var r2 = A2($Graphics$Collage.moveY,130,A2(opponent,_p21,"richard"));
      var win_bubble = $Graphics$Collage.text(A2($Text.height,80,$Text.fromString("YOU WIN!")));
      var lose_bubble = $Graphics$Collage.text(A2($Text.height,80,$Text.fromString("YOU LOSE!")));
      var tie_bubble = $Graphics$Collage.text(A2($Text.height,80,$Text.fromString("IT\'S A TIE!")));
      return _U.eq(s1,Win) ? !_U.eq(s2,Win) ? _U.list([r2,r1,win_bubble]) : _U.list([r2,r1,tie_bubble]) : _U.eq(s2,Win) ? !_U.eq(s1,Win) ? _U.list([r2
                                                                                                                                                   ,r1
                                                                                                                                                   ,lose_bubble]) : _U.list([r2
                                                                                                                                                                            ,r1
                                                                                                                                                                            ,tie_bubble]) : _U.list([r2
                                                                                                                                                                                                    ,r1]);
   };
   var display_elements = F2(function (dims,st) {
      var _p22 = st;
      var gs = _p22._0;
      var p1 = _p22._1;
      var p2 = _p22._2;
      var _p23 = gs;
      switch (_p23.ctor)
      {case "Dialog": return _U.list([race_track(racers(st)),$Graphics$Element.show(st),A2(dialog,_p23._0,dims)]);
         case "Countdown": return _U.list([race_track(racers(st)),$Graphics$Element.show(st),A2(countdown_screen,_p23._0,dims)]);
         default: return _U.list([race_track(racers(st)),A2($Graphics$Element.flow,$Graphics$Element.down,_U.list([$Graphics$Element.show(st),resetButton]))]);}
   });
   var view = F2(function (dims,st) {    var elems = A2(display_elements,dims,st);return A2($Graphics$Element.flow,$Graphics$Element.outward,elems);});
   var Right = {ctor: "Right"};
   var Left = {ctor: "Left"};
   var up_player_state = F2(function (x,_p24) {
      var _p25 = _p24;
      var _p28 = _p25._0;
      var _p27 = _p25._2;
      var _p26 = _p25._1;
      return _U.cmp(_p28,end) > 0 ? !_U.eq(_p27,Lose) ? {ctor: "_Tuple3",_0: _p28,_1: _p26,_2: Win} : {ctor: "_Tuple3",_0: _p28,_1: _p26,_2: Lose} : !_U.eq(x,
      _p26) && !_U.eq(_p27,Win) ? _U.eq(x,-1) ? {ctor: "_Tuple3",_0: _p28 + incr_amount,_1: x,_2: Left} : _U.eq(x,1) ? {ctor: "_Tuple3"
                                                                                                                       ,_0: _p28 + incr_amount
                                                                                                                       ,_1: x
                                                                                                                       ,_2: Right} : {ctor: "_Tuple3"
                                                                                                                                     ,_0: _p28
                                                                                                                                     ,_1: _p26
                                                                                                                                     ,_2: _p27} : {ctor: "_Tuple3"
                                                                                                                                                  ,_0: _p28
                                                                                                                                                  ,_1: _p26
                                                                                                                                                  ,_2: _p27};
   });
   var Stall = {ctor: "Stall"};
   var initState = {ctor: "_Tuple3",_0: Dialog(0),_1: {ctor: "_Tuple3",_0: start,_1: 0,_2: Stall},_2: {ctor: "_Tuple3",_0: start,_1: 0,_2: Stall}};
   var game_update = F2(function (up,_p29) {
      var _p30 = _p29;
      var _p38 = _p30._2;
      var _p37 = _p30._1;
      var _p36 = _p30._0;
      var _p31 = _p37;
      var x1 = _p31._0;
      var k1 = _p31._1;
      var s1 = _p31._2;
      var _p32 = _p38;
      var x2 = _p32._0;
      var k2 = _p32._1;
      var s2 = _p32._2;
      var _p33 = up;
      switch (_p33.ctor)
      {case "KeyStroke": var _p34 = _p33._0;
           return _U.eq(s1,Win) && !_U.eq(s2,Win) ? {ctor: "_Tuple3"
                                                    ,_0: _p36
                                                    ,_1: A2(up_player_state,_p34,_p37)
                                                    ,_2: {ctor: "_Tuple3",_0: x2,_1: k2,_2: Lose}} : _U.eq(s2,Win) && !_U.eq(s1,Win) ? {ctor: "_Tuple3"
                                                                                                                                       ,_0: _p36
                                                                                                                                       ,_1: A2(up_player_state,
                                                                                                                                       _p34,
                                                                                                                                       {ctor: "_Tuple3"
                                                                                                                                       ,_0: x1
                                                                                                                                       ,_1: k1
                                                                                                                                       ,_2: Lose})
                                                                                                                                       ,_2: _p38} : {ctor: "_Tuple3"
                                                                                                                                                    ,_0: _p36
                                                                                                                                                    ,_1: A2(up_player_state,
                                                                                                                                                    _p34,
                                                                                                                                                    _p37)
                                                                                                                                                    ,_2: _p38};
         case "NewTime": return _U.eq(k2,0) ? {ctor: "_Tuple3",_0: _p36,_1: _p37,_2: A2(up_player_state,1,_p38)} : _U.eq(s1,Win) && !_U.eq(s2,
           Win) ? {ctor: "_Tuple3",_0: _p36,_1: _p37,_2: A2(up_player_state,k2 * -1,{ctor: "_Tuple3",_0: x2,_1: k2,_2: Lose})} : _U.eq(s2,Win) && !_U.eq(s1,
           Win) ? {ctor: "_Tuple3",_0: _p36,_1: {ctor: "_Tuple3",_0: x1,_1: k1,_2: Lose},_2: A2(up_player_state,k2 * -1,_p38)} : {ctor: "_Tuple3"
                                                                                                                                 ,_0: _p36
                                                                                                                                 ,_1: _p37
                                                                                                                                 ,_2: A2(up_player_state,
                                                                                                                                 k2 * -1,
                                                                                                                                 _p38)};
         case "Next": return _U.eq(_p33._0,-5627) ? initState : _U.crash("BhangraRace",
           {start: {line: 126,column: 22},end: {line: 126,column: 33}})("game_update shouldn\'t have been called");
         default: return _U.crashCase("BhangraRace",
           {start: {line: 112,column: 5},end: {line: 127,column: 81}},
           _p33)("game_update shouldn\'t have been called");}
   });
   var upstate = F2(function (up,st) {
      var _p39 = st;
      var gs = _p39._0;
      var p1 = _p39._1;
      var p2 = _p39._2;
      var _p40 = {ctor: "_Tuple2",_0: gs,_1: up};
      switch (_p40._0.ctor)
      {case "Dialog": if (_p40._1.ctor === "Next") {
                 var _p41 = _p40._0._0;
                 var next = A2($Basics._op["%"],_p41 + _p40._1._0,num_prompts);
                 return _U.cmp(_p41,num_prompts) > 0 ? _U.crash("BhangraRace",
                 {start: {line: 147,column: 53},end: {line: 147,column: 64}})("error in calculations") : _U.eq(next,0) ? {ctor: "_Tuple3"
                                                                                                                         ,_0: Countdown(0)
                                                                                                                         ,_1: p1
                                                                                                                         ,_2: p2} : {ctor: "_Tuple3"
                                                                                                                                    ,_0: Dialog(next)
                                                                                                                                    ,_1: p1
                                                                                                                                    ,_2: p2};
              } else {
                 return st;
              }
         case "Countdown": if (_p40._1.ctor === "CountdownTimer") {
                 var next = _p40._0._0 + 1;
                 return _U.cmp(next,num_countdwn) > -1 ? {ctor: "_Tuple3",_0: Game,_1: p1,_2: p2} : {ctor: "_Tuple3",_0: Countdown(next),_1: p1,_2: p2};
              } else {
                 return st;
              }
         default: if (_p40._1.ctor === "CountdownTimer") {
                 return st;
              } else {
                 return A2(game_update,up,st);
              }}
   });
   var main = A3($Signal.map2,view,$Window.dimensions,A3($Signal.foldp,upstate,initState,game_sig));
   return _elm.BhangraRace.values = {_op: _op
                                    ,Stall: Stall
                                    ,Left: Left
                                    ,Right: Right
                                    ,Win: Win
                                    ,Lose: Lose
                                    ,KeyStroke: KeyStroke
                                    ,NewTime: NewTime
                                    ,Next: Next
                                    ,CountdownTimer: CountdownTimer
                                    ,Dialog: Dialog
                                    ,Countdown: Countdown
                                    ,Game: Game
                                    ,scl: scl
                                    ,board_w: board_w
                                    ,board_h: board_h
                                    ,img_w: img_w
                                    ,img_h: img_h
                                    ,start: start
                                    ,end: end
                                    ,total_dist: total_dist
                                    ,third: third
                                    ,two_third: two_third
                                    ,incr_amount: incr_amount
                                    ,num_prompts: num_prompts
                                    ,num_countdwn: num_countdwn
                                    ,dialog_prompts: dialog_prompts
                                    ,countdown_prompts: countdown_prompts
                                    ,initState: initState
                                    ,extractIndex: extractIndex
                                    ,nextBtn: nextBtn
                                    ,dialogButton: dialogButton
                                    ,resetButton: resetButton
                                    ,game_sig: game_sig
                                    ,up_player_state: up_player_state
                                    ,game_update: game_update
                                    ,upstate: upstate
                                    ,player: player
                                    ,opponent: opponent
                                    ,racers: racers
                                    ,race_track: race_track
                                    ,dialog: dialog
                                    ,countdown_screen: countdown_screen
                                    ,display_elements: display_elements
                                    ,view: view
                                    ,main: main};
};